https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/description/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        map<int,int> mp;

        while(head!=nullptr)
        {
            mp[head->val]++;
            head=head->next;
        }

        ListNode* curr=nullptr;
        ListNode* head2=nullptr;

        for(auto i: mp)
        {
            ListNode* node=new ListNode();
            if(i.second==1)
            {
                node->val=i.first;
                if(curr==nullptr)
                {
                    curr=node;
                    head2=node;
                    continue;
                }
                curr->next=node;
                curr=curr->next;
            }
        }
        return head2;
    }
};
